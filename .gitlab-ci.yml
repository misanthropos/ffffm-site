image: docker.chaos.expert/ffffm/container/gluon-build:latest

stages:
- prepare
- build
- package

# Setup build environment and prepare tooling, sets current date as build date to be consistent between targets
prepare_build:
  stage: prepare
  tags:
  - ffffm
  script:
  - git clone git://github.com/freifunk-gluon/gluon.git
  - mkdir gluon/site
  - mv $(ls -A| grep -Ev '^gluon$') gluon/site/
  - date '+%Y%m%d' > gluon/site/build_date
  - gluon/site/build.sh update
  - cd gluon
  - make  -j"$(nproc)" openwrt/staging_dir/hostpkg/bin/lua
  artifacts:
    paths:
    - gluon/
    expire_in: 2 days

# Build jobs. Build every target in its own container
build:
  stage: build
  tags:
  - ffffm
  cache:
    untracked: false
  retry: 2
  script:
  - if [[ -n "${TARGETS}" ]] && ! echo "${TARGETS}" | grep "${SELECTED_TARGETS}"; then echo "Skipping"; exit; fi
  - gluon/site/build.sh build
  artifacts:
    paths:
    - gluon/output/
    expire_in: 1 day
  needs:
  - prepare_build
  parallel:
    matrix:
      - SELECTED_TARGETS:
          - ar71xx-generic
          - ar71xx-tiny
          - ar71xx-nand
          - ath79-generic
          - brcm2708-bcm2708
          - brcm2708-bcm2709
          - brcm2708-bcm2710
          - lantiq-xrx200
          - lantiq-xway
          - mpc85xx-generic
          - mpc85xx-p1020
          - ipq40xx-generic
          - ipq806x-generic
          - ramips-mt7621
          - ramips-mt76x8
          - x86-generic
          - x86-64

# Package job: collect all artifacts from the build jobs and create the manifest
package:
  stage: package
  tags:
  - ffffm
  cache:
    untracked: false
  script:
  - gluon/site/build.sh manifest
  - if [[ -n "${SIGNING_KEY}" ]]; then gluon/site/build.sh sign "${SIGNING_KEY}" gluon/output/images/sysupgrade/*.manifest; fi
  artifacts:
    paths:
    - gluon/output/
  needs:
  - prepare_build
  - build
